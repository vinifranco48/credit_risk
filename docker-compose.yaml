

services:
  jupyter:
    build:
      context: ./docker
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    ports:
      - '8889:8888'  # Alterado de 8888
    volumes:
      - './notebooks:/home/jovyan/work'
    networks:
      - mlflow
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=mlflow
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=password
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000

  mlflow-web:
    build:
      context: ./docker
      dockerfile: Dockerfile
    ports:
      - "5001:5000"  # Alterado de 5000
    environment:
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=password
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    networks:
      - mlflow
    entrypoint: mlflow server --backend-store-uri postgresql+psycopg2://mlflow:secret@pgsql/mlflow --default-artifact-root s3://mlflow/ --host 0.0.0.0 --port 5000
    depends_on:
      - pgsql
      - minio

  minio:
    image: 'minio/minio:latest' 
    ports:
      - '9005:9000'  # Alterado de 9001/9002
      - '8905:8900'  # Alterado de 8901
    environment:
      MINIO_ROOT_USER: mlflow
      MINIO_ROOT_PASSWORD: password
    volumes:
      - 'mlflow-minio:/data/minio'
    networks:
      - mlflow
    command: 'minio server /data/minio --console-address ":8900"'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:9000/minio/health/live'
      retries: 3
      timeout: 5s

  pgsql:
    image: 'postgres:14'
    ports:
      - '5434:5432'  # Alterado de 5433
    environment:
      POSTGRES_DB: 'mlflow'
      POSTGRES_USER: 'mlflow'
      POSTGRES_PASSWORD: 'secret'
    volumes:
      - 'mlflow-pgsql:/var/lib/postgresql/data'
    networks:
      - mlflow
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - 'mlflow'
        - '-U'
        - 'mlflow'
      retries: 3
      timeout: 5s

  api_model:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: api_model
    ports:
      - '8001:8000'  # Alterado de 8000
    volumes:
      - './src:/app'
    networks:
      - mlflow
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=password
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000

  test_api_model:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: test_api_model
    volumes:
      - './src:/app'
      - './tests:/tests'
    networks:
      - mlflow
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=password
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - PYTHONPATH=/app
    entrypoint: ["pytest", "/tests"]

networks:
  mlflow:
    driver: bridge

volumes:
  mlflow-pgsql:
    driver: local
  mlflow-minio:
    driver: local
